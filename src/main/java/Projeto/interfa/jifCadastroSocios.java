/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Projeto.interfa;

import Projeto.ConectarBD;
import Projeto.DeletaBD;
import Projeto.EditaBD;
import Projeto.InsereBD;
import java.sql.Connection;
import javax.swing.JOptionPane;

public class jifCadastroSocios extends javax.swing.JInternalFrame {

    //instanciamento das classes necessárias
    InsereBD ins = new InsereBD();
    ConectarBD con = new ConectarBD();
    DeletaBD del = new DeletaBD();
    EditaBD edit = new EditaBD();
    Connection conexao = con.connectionMySql();
    //variável auxiliar para definir o tipo do botão (novo, editar, excluir)
    int acao;
    //variável auxiliar para o botão editar
    String cod_socio = "";

    public jifCadastroSocios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jcod = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cnpj = new javax.swing.JTextField();
        novo = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        salvar_edit = new javax.swing.JButton();

        setClosable(true);
        setTitle("Cadastro de Socios");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Cod");

        jcod.setEnabled(false);

        jLabel1.setForeground(new java.awt.Color(13, 36, 125));
        jLabel1.setText("Nome");

        nome.setEnabled(false);

        jLabel2.setForeground(new java.awt.Color(13, 36, 125));
        jLabel2.setText("CNPJ:");

        cnpj.setEnabled(false);

        novo.setBackground(new java.awt.Color(13, 36, 125));
        novo.setForeground(new java.awt.Color(255, 255, 255));
        novo.setText("Novo");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });

        editar.setBackground(new java.awt.Color(13, 36, 125));
        editar.setForeground(new java.awt.Color(255, 255, 255));
        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        excluir.setBackground(new java.awt.Color(13, 36, 125));
        excluir.setForeground(new java.awt.Color(255, 255, 255));
        excluir.setText("Excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        salvar.setBackground(new java.awt.Color(13, 36, 125));
        salvar.setForeground(new java.awt.Color(255, 255, 255));
        salvar.setText("Salvar");
        salvar.setEnabled(false);
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        cancelar.setBackground(new java.awt.Color(13, 36, 125));
        cancelar.setForeground(new java.awt.Color(255, 255, 255));
        cancelar.setText("Cancelar");
        cancelar.setEnabled(false);
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        salvar_edit.setBackground(new java.awt.Color(13, 36, 125));
        salvar_edit.setForeground(new java.awt.Color(255, 255, 255));
        salvar_edit.setText("Salvar Edit");
        salvar_edit.setEnabled(false);
        salvar_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar_editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(novo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(excluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(salvar_edit))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(cnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 121, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jcod, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salvar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelar))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(cancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(novo)
                    .addComponent(editar)
                    .addComponent(excluir)
                    .addComponent(salvar_edit))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBounds(600, 20, 479, 278);
    }// </editor-fold>//GEN-END:initComponents

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed
        acao = 1;
        novo();
    }//GEN-LAST:event_novoActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        editar();
        acao = 2;
    }//GEN-LAST:event_editarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        excluir();
        acao = 3;
    }//GEN-LAST:event_excluirActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
         //variável que recebe a primary key do BD
        int cod;
        //condição que verifica o tipo do botão (nesse caso, botão novo)
        if (acao == 1) {

            try {
                //armazenamento do que foi digitado nos campos em váriáveis
                String nomeS = nome.getText().trim();
                String cnpjS = cnpj.getText().trim();
                
                // verifica se os campos estão nulos
                if (nomeS != null && !nomeS.isEmpty() && cnpjS != null && !cnpjS.isEmpty()) {
                    //passando por parametros para a função que insere os clientes no BD
                    ins.insereSocio(conexao, nomeS, cnpjS);
                    //variável que recebe a primary key do CLiente
                    cod = ins.retornaPrimaryKey(conexao);
                    //Insere na interface gráfica o valor da primary key
                    jcod.setText(String.valueOf(cod));

                    JOptionPane.showMessageDialog(null, "Inserido com sucesso");
                    salvar();

                    //caso tenha algum campo vazio apresenta uma mensagem informando para inserir todos os campos e o BD não é preenchido    
                } else {
                    JOptionPane.showMessageDialog(null, "Favor Prencher todos os Campos");

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao inserir!" + e);
            }

            // segue o padrão anterior  (verificação do botão Editar)
        } else if (acao == 2) {

            try {

                if (cod_socio != null && !cod_socio.isEmpty()) {

                    int cod1 = Integer.parseInt(cod_socio);
                    String nomeS = nome.getText().trim();
                    String cnpjS = cnpj.getText().trim();


                    edit.editaSocio(conexao, nomeS, cnpjS, cod1);

                    JOptionPane.showMessageDialog(null, "Socio Editado com sucesso");
                    salvar();
                } else {
                    JOptionPane.showMessageDialog(null, "Favor Prencher o campo CNPJ! ");

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao Editar!" + e);
            }
            // segue o padrão anterior  (verificação do botão Excluir)            

        } else if (acao == 3) {

            try {

                String cnpjS = cnpj.getText().trim();

                if (cnpjS != null && !cnpjS.isEmpty()) {

                    del.deletaSocio(conexao, cnpjS);

                    JOptionPane.showMessageDialog(null, "Socio deletado com sucesso");
                    salvar();
                } else {
                    JOptionPane.showMessageDialog(null, "Favor Prencher o campo CNPJ! ");

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao Deletar!" + e);
            }

        }
    }//GEN-LAST:event_salvarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_cancelarActionPerformed

    private void salvar_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar_editActionPerformed
        //configuralçao da segunda tela do editar que realiza a edição no BD
        cod_socio = jcod.getText().trim();
        JOptionPane.showMessageDialog(null, "Favor Inserir dados do Socio!");
        editarSegundaTela();
    }//GEN-LAST:event_salvar_editActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField cnpj;
    private javax.swing.JButton editar;
    private javax.swing.JButton excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jcod;
    private javax.swing.JTextField nome;
    private javax.swing.JButton novo;
    private javax.swing.JButton salvar;
    private javax.swing.JButton salvar_edit;
    // End of variables declaration//GEN-END:variables

    public void novo() {
        jcod.setEnabled(false);
        cnpj.setEnabled(true);
        nome.setEnabled(true);
        salvar.setEnabled(true);
        excluir.setEnabled(true);
        cancelar.setEnabled(true);
        salvar_edit.setEnabled(false);
        nome.setText("");
        cnpj.setText("");
    }

    public void editar() {
        cnpj.setEnabled(false);
        jcod.setEnabled(true);
        nome.setEnabled(false);
        salvar.setEnabled(false);
        excluir.setEnabled(true);
        cancelar.setEnabled(true);
        salvar_edit.setEnabled(true);
        nome.setText("");
        cnpj.setText("");
    }

    public void editarSegundaTela() {

        jcod.setEnabled(false);
        cnpj.setEnabled(true);
        nome.setEnabled(true);
        salvar.setEnabled(true);
        excluir.setEnabled(true);
        cancelar.setEnabled(true);
        salvar_edit.setEnabled(false);

    }

    public void excluir() {
        cnpj.setEnabled(true);
        nome.setEnabled(false);
        salvar.setEnabled(true);
        excluir.setEnabled(true);
        cancelar.setEnabled(true);
        salvar_edit.setEnabled(false);
        nome.setText("");
        cnpj.setText("");
    }

    public void cancelar() {
        cnpj.setEnabled(false);
        nome.setEnabled(false);
        salvar.setEnabled(false);
        cancelar.setEnabled(false);
        salvar_edit.setEnabled(false);
        nome.setText("");
        cnpj.setText("");

    }

    public void salvar() {
        cnpj.setEnabled(false);
        nome.setEnabled(false);
        salvar.setEnabled(false);
        cancelar.setEnabled(false);
        salvar_edit.setEnabled(false);

    }

}
